syntax = "proto3";

package pb;

option go_package = "github.com/DataDog/datadog-agent/cmd/agent/api/pb";

import "google/api/annotations.proto";

service Tagger {
	rpc StreamTags(StreamTagsRequest) returns (stream StreamTagsResponse) {
		option (google.api.http) = {
			get: "/v1/grpc/tagger/stream_tags"
		};
	};
	rpc FetchEntity(FetchEntityRequest) returns (Entity) {
		option (google.api.http) = {
			get: "/v1/grpc/tagger/fetch_entity"
		};
	};
}

message StreamTagsRequest {
	TagCardinality cardinality = 1;
	Filter includeFilter = 2;
	Filter excludeFilter = 3;
}

message StreamTagsResponse {
	EventType type = 1;
	Entity entity = 2;
}

enum EventType {
	ADDED = 0;
	MODIFIED = 1;
	DELETED = 2;
}

enum TagCardinality {
	LOW = 0;
	ORCHESTRATOR = 1;
	HIGH = 2;
}

message Filter {
	string kubeNamespace = 1;
	string image = 2;
	string containerName = 3;
}

message Entity {
	EntityId id = 1;
	repeated string tags = 2;
}

message FetchEntityRequest {
	EntityId id = 1;
	TagCardinality cardinality = 2;
}

message EntityId {
	string prefix = 1;
	string uid = 2;
}
