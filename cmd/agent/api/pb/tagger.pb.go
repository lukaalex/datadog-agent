// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tagger.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventType int32

const (
	EventType_ADDED    EventType = 0
	EventType_MODIFIED EventType = 1
	EventType_DELETED  EventType = 2
)

var EventType_name = map[int32]string{
	0: "ADDED",
	1: "MODIFIED",
	2: "DELETED",
}

var EventType_value = map[string]int32{
	"ADDED":    0,
	"MODIFIED": 1,
	"DELETED":  2,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_234f295180e939ff, []int{0}
}

type TagCardinality int32

const (
	TagCardinality_LOW          TagCardinality = 0
	TagCardinality_ORCHESTRATOR TagCardinality = 1
	TagCardinality_HIGH         TagCardinality = 2
)

var TagCardinality_name = map[int32]string{
	0: "LOW",
	1: "ORCHESTRATOR",
	2: "HIGH",
}

var TagCardinality_value = map[string]int32{
	"LOW":          0,
	"ORCHESTRATOR": 1,
	"HIGH":         2,
}

func (x TagCardinality) String() string {
	return proto.EnumName(TagCardinality_name, int32(x))
}

func (TagCardinality) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_234f295180e939ff, []int{1}
}

type StreamTagsRequest struct {
	Cardinality          TagCardinality `protobuf:"varint,1,opt,name=cardinality,proto3,enum=pb.TagCardinality" json:"cardinality,omitempty"`
	IncludeFilter        *Filter        `protobuf:"bytes,2,opt,name=includeFilter,proto3" json:"includeFilter,omitempty"`
	ExcludeFilter        *Filter        `protobuf:"bytes,3,opt,name=excludeFilter,proto3" json:"excludeFilter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StreamTagsRequest) Reset()         { *m = StreamTagsRequest{} }
func (m *StreamTagsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamTagsRequest) ProtoMessage()    {}
func (*StreamTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_234f295180e939ff, []int{0}
}

func (m *StreamTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamTagsRequest.Unmarshal(m, b)
}
func (m *StreamTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamTagsRequest.Marshal(b, m, deterministic)
}
func (m *StreamTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamTagsRequest.Merge(m, src)
}
func (m *StreamTagsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamTagsRequest.Size(m)
}
func (m *StreamTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamTagsRequest proto.InternalMessageInfo

func (m *StreamTagsRequest) GetCardinality() TagCardinality {
	if m != nil {
		return m.Cardinality
	}
	return TagCardinality_LOW
}

func (m *StreamTagsRequest) GetIncludeFilter() *Filter {
	if m != nil {
		return m.IncludeFilter
	}
	return nil
}

func (m *StreamTagsRequest) GetExcludeFilter() *Filter {
	if m != nil {
		return m.ExcludeFilter
	}
	return nil
}

type StreamTagsResponse struct {
	Type                 EventType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.EventType" json:"type,omitempty"`
	Entity               *Entity   `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StreamTagsResponse) Reset()         { *m = StreamTagsResponse{} }
func (m *StreamTagsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamTagsResponse) ProtoMessage()    {}
func (*StreamTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_234f295180e939ff, []int{1}
}

func (m *StreamTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamTagsResponse.Unmarshal(m, b)
}
func (m *StreamTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamTagsResponse.Marshal(b, m, deterministic)
}
func (m *StreamTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamTagsResponse.Merge(m, src)
}
func (m *StreamTagsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamTagsResponse.Size(m)
}
func (m *StreamTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamTagsResponse proto.InternalMessageInfo

func (m *StreamTagsResponse) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_ADDED
}

func (m *StreamTagsResponse) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type Filter struct {
	KubeNamespace        string   `protobuf:"bytes,1,opt,name=kubeNamespace,proto3" json:"kubeNamespace,omitempty"`
	Image                string   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	ContainerName        string   `protobuf:"bytes,3,opt,name=containerName,proto3" json:"containerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_234f295180e939ff, []int{2}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetKubeNamespace() string {
	if m != nil {
		return m.KubeNamespace
	}
	return ""
}

func (m *Filter) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Filter) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

type Entity struct {
	Id                   *EntityId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tags                 []string  `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_234f295180e939ff, []int{3}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetId() *EntityId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Entity) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type FetchEntityRequest struct {
	Id                   *EntityId      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cardinality          TagCardinality `protobuf:"varint,2,opt,name=cardinality,proto3,enum=pb.TagCardinality" json:"cardinality,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FetchEntityRequest) Reset()         { *m = FetchEntityRequest{} }
func (m *FetchEntityRequest) String() string { return proto.CompactTextString(m) }
func (*FetchEntityRequest) ProtoMessage()    {}
func (*FetchEntityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_234f295180e939ff, []int{4}
}

func (m *FetchEntityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchEntityRequest.Unmarshal(m, b)
}
func (m *FetchEntityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchEntityRequest.Marshal(b, m, deterministic)
}
func (m *FetchEntityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchEntityRequest.Merge(m, src)
}
func (m *FetchEntityRequest) XXX_Size() int {
	return xxx_messageInfo_FetchEntityRequest.Size(m)
}
func (m *FetchEntityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchEntityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchEntityRequest proto.InternalMessageInfo

func (m *FetchEntityRequest) GetId() *EntityId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *FetchEntityRequest) GetCardinality() TagCardinality {
	if m != nil {
		return m.Cardinality
	}
	return TagCardinality_LOW
}

type EntityId struct {
	Prefix               string   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Uid                  string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityId) Reset()         { *m = EntityId{} }
func (m *EntityId) String() string { return proto.CompactTextString(m) }
func (*EntityId) ProtoMessage()    {}
func (*EntityId) Descriptor() ([]byte, []int) {
	return fileDescriptor_234f295180e939ff, []int{5}
}

func (m *EntityId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityId.Unmarshal(m, b)
}
func (m *EntityId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityId.Marshal(b, m, deterministic)
}
func (m *EntityId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityId.Merge(m, src)
}
func (m *EntityId) XXX_Size() int {
	return xxx_messageInfo_EntityId.Size(m)
}
func (m *EntityId) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityId.DiscardUnknown(m)
}

var xxx_messageInfo_EntityId proto.InternalMessageInfo

func (m *EntityId) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *EntityId) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("pb.TagCardinality", TagCardinality_name, TagCardinality_value)
	proto.RegisterType((*StreamTagsRequest)(nil), "pb.StreamTagsRequest")
	proto.RegisterType((*StreamTagsResponse)(nil), "pb.StreamTagsResponse")
	proto.RegisterType((*Filter)(nil), "pb.Filter")
	proto.RegisterType((*Entity)(nil), "pb.Entity")
	proto.RegisterType((*FetchEntityRequest)(nil), "pb.FetchEntityRequest")
	proto.RegisterType((*EntityId)(nil), "pb.EntityId")
}

func init() { proto.RegisterFile("tagger.proto", fileDescriptor_234f295180e939ff) }

var fileDescriptor_234f295180e939ff = []byte{
	// 567 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x6e, 0xd3, 0x4c,
	0x14, 0xad, 0x9d, 0xd6, 0xad, 0x6f, 0xd2, 0xca, 0xdf, 0xd5, 0x47, 0x55, 0x85, 0x80, 0x82, 0xe9,
	0x43, 0x54, 0x89, 0xb8, 0x49, 0xcb, 0x0b, 0x6f, 0xa5, 0x76, 0x48, 0xa4, 0x42, 0xa4, 0xa9, 0xa5,
	0x4a, 0xf0, 0x50, 0x8d, 0xed, 0xe9, 0x64, 0x20, 0xb1, 0x8d, 0x3d, 0xa9, 0x9a, 0x57, 0xb6, 0xc0,
	0x3a, 0x58, 0x06, 0x2b, 0x60, 0x0b, 0x2c, 0x04, 0xf9, 0x07, 0xe2, 0x24, 0x12, 0xe2, 0x6d, 0xe6,
	0xce, 0x39, 0x67, 0xce, 0xdc, 0x7b, 0x06, 0x1a, 0x92, 0x72, 0xce, 0x92, 0x6e, 0x9c, 0x44, 0x32,
	0x42, 0x35, 0xf6, 0x9a, 0x2d, 0x1e, 0x45, 0x7c, 0xca, 0x2c, 0x1a, 0x0b, 0x8b, 0x86, 0x61, 0x24,
	0xa9, 0x14, 0x51, 0x98, 0x16, 0x08, 0xf3, 0x9b, 0x02, 0xff, 0x5d, 0xcb, 0x84, 0xd1, 0x99, 0x4b,
	0x79, 0x4a, 0xd8, 0xe7, 0x39, 0x4b, 0x25, 0x9e, 0x43, 0xdd, 0xa7, 0x49, 0x20, 0x42, 0x3a, 0x15,
	0x72, 0x71, 0xa4, 0xb4, 0x95, 0xce, 0x41, 0x1f, 0xbb, 0xb1, 0xd7, 0x75, 0x29, 0xbf, 0x5c, 0x9e,
	0x90, 0x2a, 0x0c, 0x4f, 0x61, 0x5f, 0x84, 0xfe, 0x74, 0x1e, 0xb0, 0x81, 0x98, 0x4a, 0x96, 0x1c,
	0xa9, 0x6d, 0xa5, 0x53, 0xef, 0x43, 0xc6, 0x2b, 0x2a, 0x64, 0x15, 0x90, 0x31, 0xd8, 0x43, 0x95,
	0x51, 0xdb, 0x64, 0xac, 0x00, 0xcc, 0x0f, 0x80, 0x55, 0xbb, 0x69, 0x1c, 0x85, 0x29, 0xc3, 0x67,
	0xb0, 0x2d, 0x17, 0x31, 0x2b, 0x8d, 0xee, 0x67, 0x74, 0xe7, 0x9e, 0x85, 0xd2, 0x5d, 0xc4, 0x8c,
	0xe4, 0x47, 0x68, 0x82, 0xc6, 0x42, 0x99, 0xbd, 0xa6, 0xe2, 0xca, 0xc9, 0x2b, 0xa4, 0x3c, 0x31,
	0x3f, 0x82, 0x56, 0x1a, 0x3b, 0x86, 0xfd, 0x4f, 0x73, 0x8f, 0xbd, 0xa3, 0x33, 0x96, 0xc6, 0xd4,
	0x2f, 0x94, 0x75, 0xb2, 0x5a, 0xc4, 0xff, 0x61, 0x47, 0xcc, 0x28, 0x67, 0xb9, 0xa4, 0x4e, 0x8a,
	0x4d, 0xc6, 0xf5, 0xa3, 0x50, 0x52, 0x11, 0xb2, 0x24, 0xc3, 0xe6, 0x8f, 0xd2, 0xc9, 0x6a, 0xd1,
	0x7c, 0x05, 0x5a, 0x71, 0x3b, 0xb6, 0x40, 0x15, 0x41, 0x7e, 0x41, 0xbd, 0xdf, 0x58, 0xba, 0x1a,
	0x05, 0x44, 0x15, 0x01, 0x22, 0x6c, 0x4b, 0xca, 0xd3, 0x23, 0xb5, 0x5d, 0xeb, 0xe8, 0x24, 0x5f,
	0x9b, 0x13, 0xc0, 0x01, 0x93, 0xfe, 0xa4, 0xb4, 0x5f, 0x0e, 0xed, 0xef, 0x3a, 0x6b, 0x23, 0x55,
	0xff, 0x69, 0xa4, 0xe6, 0x39, 0xec, 0xfd, 0x56, 0xc1, 0x43, 0xd0, 0xe2, 0x84, 0xdd, 0x89, 0x87,
	0xb2, 0x19, 0xe5, 0x0e, 0x0d, 0xa8, 0xcd, 0x45, 0x50, 0xf6, 0x20, 0x5b, 0x9e, 0xf4, 0x40, 0xff,
	0xd3, 0x7e, 0xd4, 0x61, 0xe7, 0xc2, 0xb6, 0x1d, 0xdb, 0xd8, 0xc2, 0x06, 0xec, 0xbd, 0x1d, 0xdb,
	0xa3, 0xc1, 0xc8, 0xb1, 0x0d, 0x05, 0xeb, 0xb0, 0x6b, 0x3b, 0x57, 0x8e, 0xeb, 0xd8, 0x86, 0x7a,
	0xf2, 0x12, 0x0e, 0x56, 0x7d, 0xe0, 0x2e, 0xd4, 0xae, 0xc6, 0x37, 0xc6, 0x16, 0x1a, 0xd0, 0x18,
	0x93, 0xcb, 0xa1, 0x73, 0xed, 0x92, 0x0b, 0x77, 0x4c, 0x0c, 0x05, 0xf7, 0x60, 0x7b, 0x38, 0x7a,
	0x33, 0x34, 0xd4, 0xfe, 0x77, 0x05, 0x34, 0x37, 0x4f, 0x3c, 0x7a, 0x00, 0xcb, 0x64, 0xe0, 0xa3,
	0xec, 0x65, 0x1b, 0xc1, 0x6e, 0x1e, 0xae, 0x97, 0x8b, 0x00, 0x99, 0xcf, 0xbf, 0xfc, 0xf8, 0xf9,
	0x55, 0x7d, 0x82, 0x8f, 0xad, 0xfb, 0x9e, 0xc5, 0x93, 0xd8, 0xb7, 0x8a, 0x7f, 0x64, 0xa5, 0x39,
	0xf6, 0x36, 0x6b, 0xfb, 0xa9, 0x82, 0x37, 0x50, 0xaf, 0x34, 0x1e, 0x73, 0xb5, 0xcd, 0x49, 0x34,
	0x2b, 0xd9, 0x32, 0x8f, 0x73, 0xe5, 0xa7, 0xd8, 0x5a, 0x57, 0xbe, 0xcb, 0x78, 0xb7, 0x45, 0xf2,
	0x5e, 0x9f, 0xbd, 0xef, 0x71, 0x21, 0x27, 0x73, 0xaf, 0xeb, 0x47, 0x33, 0xcb, 0xa6, 0x92, 0xda,
	0x11, 0xb7, 0x02, 0x2a, 0x69, 0x10, 0xf1, 0x17, 0x94, 0xb3, 0x50, 0x5a, 0xfe, 0x2c, 0xb0, 0x8a,
	0x55, 0xf6, 0x95, 0x63, 0xcf, 0xd3, 0xf2, 0x2f, 0x7c, 0xf6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xd6,
	0x06, 0x3f, 0xde, 0xf4, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaggerClient is the client API for Tagger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaggerClient interface {
	StreamTags(ctx context.Context, in *StreamTagsRequest, opts ...grpc.CallOption) (Tagger_StreamTagsClient, error)
	FetchEntity(ctx context.Context, in *FetchEntityRequest, opts ...grpc.CallOption) (*Entity, error)
}

type taggerClient struct {
	cc *grpc.ClientConn
}

func NewTaggerClient(cc *grpc.ClientConn) TaggerClient {
	return &taggerClient{cc}
}

func (c *taggerClient) StreamTags(ctx context.Context, in *StreamTagsRequest, opts ...grpc.CallOption) (Tagger_StreamTagsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Tagger_serviceDesc.Streams[0], "/pb.Tagger/StreamTags", opts...)
	if err != nil {
		return nil, err
	}
	x := &taggerStreamTagsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Tagger_StreamTagsClient interface {
	Recv() (*StreamTagsResponse, error)
	grpc.ClientStream
}

type taggerStreamTagsClient struct {
	grpc.ClientStream
}

func (x *taggerStreamTagsClient) Recv() (*StreamTagsResponse, error) {
	m := new(StreamTagsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *taggerClient) FetchEntity(ctx context.Context, in *FetchEntityRequest, opts ...grpc.CallOption) (*Entity, error) {
	out := new(Entity)
	err := c.cc.Invoke(ctx, "/pb.Tagger/FetchEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaggerServer is the server API for Tagger service.
type TaggerServer interface {
	StreamTags(*StreamTagsRequest, Tagger_StreamTagsServer) error
	FetchEntity(context.Context, *FetchEntityRequest) (*Entity, error)
}

// UnimplementedTaggerServer can be embedded to have forward compatible implementations.
type UnimplementedTaggerServer struct {
}

func (*UnimplementedTaggerServer) StreamTags(req *StreamTagsRequest, srv Tagger_StreamTagsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamTags not implemented")
}
func (*UnimplementedTaggerServer) FetchEntity(ctx context.Context, req *FetchEntityRequest) (*Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchEntity not implemented")
}

func RegisterTaggerServer(s *grpc.Server, srv TaggerServer) {
	s.RegisterService(&_Tagger_serviceDesc, srv)
}

func _Tagger_StreamTags_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamTagsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TaggerServer).StreamTags(m, &taggerStreamTagsServer{stream})
}

type Tagger_StreamTagsServer interface {
	Send(*StreamTagsResponse) error
	grpc.ServerStream
}

type taggerStreamTagsServer struct {
	grpc.ServerStream
}

func (x *taggerStreamTagsServer) Send(m *StreamTagsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Tagger_FetchEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaggerServer).FetchEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Tagger/FetchEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaggerServer).FetchEntity(ctx, req.(*FetchEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tagger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Tagger",
	HandlerType: (*TaggerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchEntity",
			Handler:    _Tagger_FetchEntity_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamTags",
			Handler:       _Tagger_StreamTags_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "tagger.proto",
}
